package com.xuyang.algorithm.bat;

/**
 * @Auther: allanyang
 * @Date: 2020/1/13 14:55
 * @Description:
 */
public class 位运算 {

    // 1. 异或运算^
    /**
     * 相同为0，不同为1
     *
     * x^0 = x;
     * x^x = 0;
     * a^b = c --> a^c = b | b^c = a
     */

    // 2.常见位运算
    /**
     * 判断奇偶性：x&1 == 1
     * 清除最低位的1： x = x&(x-1)
     * 得到最低位的1： x&(-x)
     */

    // 3.不安全网页的黑名单包含100亿个黑名单网页，每个网页的URL最多占用64字节。现在想要实现一种网页过滤系统，可以根据网页的URL判断该网页是否再黑名单上，请设计该系统。要求该系统允许有万分之一一下的判断失误率，并且使用的额外空间不要超过30G。
    /**
     * 布隆过滤器
     *
     * 首先通过多个hash函数初始化布隆过滤器集合。再运行的时候通过每一个hash函数来判断是否再集合中，如果再是黑名单（可能误判），如果不在，则肯定不是黑名单。
     */

    // 4.交换两个元素
    /**
     * a = a ^ b
     * b = a ^ b
     * a = a ^ b
     */

    // 5.给定一个整型数组arr,其中只有一个数出现了奇数次，其他的数都出现了偶数次，请打印这个数，要求时间复杂度位O（n）,额外空间复杂度为O（1）。
    /**
     * 用一个新的数和数组中的所有数进行异或操作，最后的那个数即为奇数次的数。
     */

    // 6.给定一个整型数组arr，其中有两个数出现了奇数次，其他的数都出现了偶数次，请打印这两个数。要求时间复杂度为O（n），额外空间复杂度为O（1）。
    /**
     * 用0和所有数异或，获取到这两个数的异或结果t。获取t的某个不为0的位置。然后再次用两个0和所有数进行异或，其中一个适合t那个位为0的异或，另一个和t不为0的异或。最终结果就是这两个数。
     */
}
