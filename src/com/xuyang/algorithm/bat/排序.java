package com.xuyang.algorithm.bat;

/**
 * @Auther: allanyang
 * @Date: 2020/1/12 12:05
 * @Description:
 */
public class 排序 {

    // 1.时间复杂度
    /**
     * 算法        时间复杂度      空间复杂度       稳定性
     * 冒泡排序     O（n^2）          O(1)           yes
     * 选择排序     O（n^2）          O(1)           no
     * 插入排序     O（n^2）          O(1)           yes
     * 归并排序     O（nlgn）         O(n)           yes
     * 快速排序     O（nlgn）         O(lgn~n)       no
     * 堆排序       O（nlgn）         O(1)           no
     * 希尔排序     O（nlgn）         O(1)           no
     * 计数排序     O（n）            O(m)           yes
     * 基数排序     O（n）            O(m)           yes
     */


    // 2.已知一个几乎有序的数组，几乎有序是指如果数组排好顺序后每个元素移动的距离不超过k，并且k相对于数组长度来说很小。请问选择什么排序比较好
    /**
     * 插入排序：O(n*k)
     * 堆排序：O（n*lgk）
     */

    // 3.判断数组中是否有重复值，必须保证额外空间复杂度为O（1）
    /**
     * 要求空间复杂度为O（1）的排序算法。
     * 堆排序，非递归版本
     */

    // 4.把两个有序数组合并为一个数组，第一个数组空间正阿红可以容纳两个数组元素
    /**
     * 从后面往前复制。
     */

    // 5.荷兰国旗问题。包含0，1，2的整数数组进行拍排序，要求使用交换，原地排序，而不是利用技术进行排序
    /**
     *  leetcode 75
     *  快速排序的partition过程，时间复杂度O（1），空间复杂度O（1）
     */

    // 6.需要排序的最短子数组长度
    // [1.5,4,3,2,6,7],返回4，因为只有[5，4，3，2]需要排序
    /**
     * 最优时间复杂度是O（n）,空间复杂度O（1）
     * 正序和逆序遍历两次，分别找到最左和最有的位置，然后做差相减
     */

    // 7.给定一个整形数组arr，返回如果排序之后相邻两数的最大插值。
    // 例如：某数组排序后为1 3 4 7 8 9 最大插值来自于4和7.所以返回3
    /**
     * 时间复杂度：O（n），空间复杂度：O（n）
     * 桶排序
     */


}